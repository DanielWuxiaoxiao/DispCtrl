#LogoWidget {
    background-color: rgba(16, 24, 24, 0.8);
    /* 边框颜色，可根据需要调整 */
    border-width: 0 0 0 0;
    /* 设置四个角的圆角半径 */
    /* 将左上、右上、左下角的圆角半径设为0 */
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    border-bottom-left-radius: 15px;
    /* 仅将右下角的圆角半径设置为你想要的值 */
    border-bottom-right-radius: 15px;
    /* 例如，设置为10像素 */
    padding: 6px 10px;
}

#TitleLabel {
    color: #ffffff;
    font-size: 24px;
    font-weight: bold;
}

#SubtitleLabel {
    color: #66ffcc;
    font-size: 15px;
    margin-top: -2px;
}

#mainviewTopLeft {
    background-color: rgba(16, 24, 24, 0.8);
    /* 这个颜色是深灰色，透明度0.8 */
    border-radius: 5px;
    /* 统一设置所有角的圆角 */
}

/* 移除 #mainPview 的样式 */
/*QLabel的样式，确保它仍然生效*/
#mainviewTopLeft QLabel {
    background-color: transparent;
    color: #66ffcc;
    font-size: 18px;
    font-weight: bold;
}

#mainviewTopLeft QLineEdit {
    background-color: rgba(16, 24, 24, 0.8);
    /* 继承的深灰色背景 */
    color: #66ffcc;
    /* 继承的文字颜色 */
    font-size: 18px;
    font-weight: bold;
    border-radius: 5px;
    /* 为 QLineEdit 添加圆角 */
    border: 1px solid lightblue;
    /* 添加一个浅灰色边框，使其更清晰 */
    padding: 4px;
    /* 调整内边距 */
}

/* 鼠标悬停时的样式 */
#mainviewTopLeft QLineEdit:hover {
    background-color: rgba(32, 48, 48, 0.9);
    /* 更深一点的灰色，或者你喜欢的亮色 */
    border: 1px solid #99ffff;
    /* 悬停时改变边框颜色，更明显 */
    color: #ffffff;
    /* 悬停时改变文字颜色 */
}

/* 焦点时的样式（可选，但推荐） */
#mainviewTopLeft QLineEdit:focus {
    border: 1px solid #66ffcc;
    /* 获得焦点时，边框颜色变为目标亮色 */
    background-color: rgba(16, 24, 24, 0.9);
    /* 稍微加深背景 */
}

#PointInfoW {
    background-color: rgba(16, 24, 24, 0.8);
    /* 这个颜色是深灰色，透明度0.8 */
    border-radius: 5px;
    /* 统一设置所有角的圆角 */
}

/* 移除 #mainPview 的样式 */
/*QLabel的样式，确保它仍然生效*/
#PointInfoW QLabel {
    background-color: transparent;
    color: #66ffcc;
    font-size: 18px;
    font-weight: bold;
}

QLabel#batch,
QLabel#range,
QLabel#azi,
QLabel#ele,
QLabel#speed,
QLabel#SNR {
    background-color: transparent;
    color: white;
    font-size: 18px;
}

/*ppiview 无边框 无颜色*/
#mainPview {
    background-color: transparent;
    border: 0px solid;
}

#ZoomView {
    background-color: transparent;
    border: 0px solid;
}

#timeLabel {
    color: #66ffcc;
    font-size: 20px;
    background-color: rgba(16, 24, 24, 0.8);
    /* 边框颜色，可根据需要调整 */
    border-width: 0 0 0 0;
    /* 设置四个角的圆角半径 */
    /* 将左上、右上、左下角的圆角半径设为0 */
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    border-bottom-left-radius: 15px;
    /* 仅将右下角的圆角半径设置为你想要的值 */
    border-bottom-right-radius: 15px;
    /* 例如，设置为10像素 */
    padding: 6px 10px;
}

/* 右上角窗口按钮通用样式 */
QPushButton#minButton {
    background-color: rgba(16, 24, 24, 0.8);
    /* 无背景 */
    border: 1px solid black;
    /* 默认细绿色边框 */
    border-radius: 8px;
    padding: 4px;
    margin: 2px;
    color: #ffffff;
}

/* 悬浮状态 */
QPushButton#minButton:hover {
    border: 2px solid #00ff88;
    /* 边框变粗且更亮 */
    background-color: rgb(16, 24, 24);
    /* 仍然透明 */
    /* 稍微浮起 */
    color: #66ffcc;
}

/* 按下状态 */
QPushButton#minButton:pressed {
    border: 2px solid #00ffaa;
    background-color: rgba(0, 255, 136, 0.15);
    /* 压下效果 */
    color: #66ffcc;
}

/* X 按钮 hover 特效（切换图标） */
QPushButton#CloseButton {
    background-color: rgba(16, 24, 24, 0.8);
    border: 1px solid black;
    border-radius: 8px;
    padding: 4px;
    margin: 2px;
    color: #ffffff;
}

QPushButton#CloseButton:hover {
    border: 2px solid #ff4444;
    /* 悬浮变成红色边框 */
    color: #66ffcc;
}

QPushButton#CloseButton:pressed {
    border: 2px solid #00ffaa;
    background-color: rgba(0, 255, 136, 0.15);
    /* 压下效果 */
    color: #66ffcc;
}


/* 功能按钮区域背景 */
/* 功能按钮区域背景 */
#FuncWidget {
    background-color: rgb(16, 24, 24, 0.8);
    border-style: solid;
    border-color: rgba(0, 100, 0, 0.2);
    /* 背景边框，深绿 */
    border-width: 10px 10px 10px 10px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
    padding: 8px 16px;
}

/* 默认按钮样式 */
QToolButton[buttonGroup="A"] {
    color: #00ff88;
    /* 默认字体绿色 */
    font-size: 14px;
    padding: 8px 20px;
    border: 2px solid rgba(144, 238, 144, 0.7);
    /* 较暗的绿色边框 */
    border-radius: 8px;
    background-color: transparent;
}

/* 鼠标悬浮 */
QToolButton[buttonGroup="A"]:hover {
    color: #ffffff;
    /* 字体变白 */
    border: 3px solid #00ff88;
    /* 边框高亮 + 变粗 */
    background-color: rgba(0, 100, 20, 0.25);
    /* 背景色加深 */
}

/* 按下状态 */
QToolButton[buttonGroup="A"]:pressed {
    color: #ffffff;
    border: 3px solid #00ffaa;
    background-color: rgba(0, 0, 0, 0.35);
}


/* 当tablewidget添加了控件后， pane的style就不起作用了，需要单独设置这个控件的style */
/* Tab 栏整体 */
QTabWidget::pane {
    border: 0px solid #00ff88;
}

QTabWidget {
    border: 0px solid #00ff88;
}

/* 针对标签栏容器本身的样式 */
QTabBar {
    border: none;
    /* 或者 border: 0px; */
}

QWidget#tab1,
QWidget#tab_2,
QWidget#tab_3,
QWidget#tab_4,
QWidget#tab_5,
QWidget#tab {
    border: 0px solid #00ff88;
    border-radius: 8px;
    background: rgba(16, 24, 24, 0.8);
}

/* Tab 标签 */
QTabWidget QTabBar::tab {
    font-family: "Microsoft YaHei";
    font-size: 13px;
    color: #cccccc;
    background: rgba(0, 40, 40, 0.3);
    padding: 6px 14px;
    border: 0px solid;
    border-radius: 6px;
    margin: 3px;
}

/* Tab 被选中 */
QTabWidget QTabBar::tab:selected {
    color: #00ff88;
    border: 2px solid black;
    background: rgba(0, 80, 80, 0.9);
}


QTabWidget QTabBar::tab {
    color: #cccccc;
    background: rgba(0, 40, 40, 0.3);
    padding: 6px 12px;
    border: 0px solid #005533;
    border-radius: 6px;
    margin: 4px 6px;
}

QTabWidget QTabBar::tab:selected {
    color: #00ff88;
    border: 2px solid black;
    background: rgba(0, 80, 80, 0.9);
}

/* 可能因为层级问题  labelgroup = "a"的形式无法生效 */
/* 状态标签左侧（参数名） */
#stalabel1,
#stalabel2,
#stalabel3,
#stalabel4,
#stalabel5 {
    font-family: "Microsoft YaHei";
    font-size: 14px;
    color: #00ff88;
    /* 绿色 */
    /* 设置背景色，以防父控件透明导致不显示 */
    background-color: transparent;
}

/* 状态标签右侧（值） */
#stamsg1,
#stamsg2,
#stamsg3,
#stamsg4,
#stamsg5 {
    font-family: "Microsoft YaHei";
    font-size: 14px;
    color: #ffffff;
    /* 白色 */
    /* 设置背景色，以防父控件透明导致不显示 */
    background-color: transparent;
}

/* 日志编辑框 */
QTextEdit#logEdit {
    background-color: rgba(0, 20, 20, 0.3);
    border: 1px solid lightblue;
    border-radius: 8px;
    font-family: "Microsoft YaHei";
    font-size: 12px;
    color: #cccccc;
}

/* 日志滚动条美化 */
QTextEdit#logEdit QScrollBar:vertical {
    background: transparent;
    width: 8px;
    margin: 0px;
}

QTextEdit#logEdit QScrollBar::handle:vertical {
    background: #00aa66;
    border-radius: 4px;
}

QTextEdit#logEdit QScrollBar::handle:vertical:hover {
    background: #00ff88;
}

QTextEdit#logEdit QScrollBar::add-line,
QTextEdit#logEdit QScrollBar::sub-line {
    height: 0px;
}

/* QTableWidget 的样式 */
/* 强制背景绘制，避免被父控件覆盖 */
/* --- 正确的样式 --- */
QTableWidget#tableWidget {
    /* 这里只放边框、字体颜色等整体属性 */
    border: 0px solid;
    color: #E0E0E0;
    font-size: 14px;
    /* 不要在这里设置background-color */
    background: transparent;
    /* 让控件本身透明 */
}

/* Item的样式保持不变 */
QTableWidget#tableWidget::item {
    border-bottom: 1px solid #333333;
    padding-left: 5px;
    background-color: transparent;
    /* Item背景最好也设为透明，让viewport的背景透出来 */
}

/* 选中项的样式可以覆盖背景色 */
QTableWidget#tableWidget::item:selected {
    background-color: rgba(0, 255, 200, 0.2);
    color: #FFFFFF;
    border: 1px solid #00ffc8;
}

/*detach*/
#pviewFitW {
    background-color: rgba(0, 40, 40, 0.8);
    border: 0px solid #00ff88;
    border-radius: 15px;
}

/* 自定义窗口 */
#TitleBar {
    background-color: transparent;
    border: 0px solid #00ffc8;
    min-height: 40px;
}

#TitleLabel {
    color: #00ff88;
    font-size: 18px;
    font-weight: bold;
}

/* 右上角窗口按钮通用样式 */
#cMaxButton {
    background-color: transparent;
    /* 无背景 */
    border: 0px solid black;
    /* 默认细绿色边框 */
    border-radius: 8px;
    padding: 4px;
    margin: 2px;
}

/* 悬浮状态 */
#cMaxButton:hover {
    border: 2px solid #00ff88;
    /* 边框变粗且更亮 */
    background-color: rgb(16, 24, 24);
}

/* 按下状态 */
#cMaxButton:pressed {
    border: 2px solid #00ffaa;
    background-color: rgba(0, 255, 136, 0.15);
}

/* 右上角窗口按钮通用样式 */
#cMinButton {
    background-color: transparent;
    /* 无背景 */
    border: 0px solid black;
    /* 默认细绿色边框 */
    border-radius: 8px;
    padding: 4px;
    margin: 2px;
}

/* 悬浮状态 */
#cMinButton:hover {
    border: 2px solid #00ff88;
    /* 边框变粗且更亮 */
    background-color: rgb(16, 24, 24);
}

/* 按下状态 */
#cMinButton:pressed {
    border: 2px solid #00ffaa;
    background-color: rgba(0, 255, 136, 0.15);
}

/* X 按钮 hover 特效（切换图标） */
#cCloseBtn {
    background-color: transparent;
    /* 无背景 */
    border: 0px solid black;
    /* 默认细绿色边框 */
    border-radius: 8px;
    padding: 4px;
    margin: 2px;
}

#cCloseBtn:hover {
    border: 2px solid #ff4444;
    /* 悬浮变成红色边框 */
    background-color: transparent;
}

#cCloseBtn:pressed {
    border: 2px solid red;
    background-color: transparent;
}


/* 默认按钮样式 */
QPushButton {
    color: #00ff88;
    /* 默认字体绿色 */
    font-size: 14px;
    padding: 8px 20px;
    border: 2px solid rgba(144, 238, 144, 0.7);
    /* 较暗的绿色边框 */
    border-radius: 8px;
    background-color: transparent;
}

/* 鼠标悬浮 */
QPushButton:hover {
    color: #ffffff;
    /* 字体变白 */
    border: 3px solid #00ff88;
    /* 边框高亮 + 变粗 */
    background-color: rgba(0, 100, 20, 0.25);
    /* 背景色加深 */
}

/* 按下状态 */
QPushButton:pressed {
    color: #ffffff;
    border: 3px solid #00ffaa;
    background-color: rgba(0, 0, 0, 0.35);
}

/* ZoomView 工具栏按钮：在 pviewFitW 区域下的样式，使按钮与背景一致 */
#pviewFitW QPushButton#ZoomInBtn,
#pviewFitW QPushButton#ZoomOutBtn,
#pviewFitW QPushButton#ResetBtn,
#pviewFitW QPushButton#DragBtn,
#pviewFitW QPushButton#MeasureBtn {
    /* 让父背景透出，采用低对比边框以保持简洁 */
    background-color: transparent;
    color: #00ff88;
    border: 1px solid rgba(255,255,255,0.04);
    border-radius: 8px;
    padding: 6px;
    margin: 1px;
}

/* 悬浮显示高亮边框，略微加深背景以提示交互 */
#pviewFitW QPushButton#ZoomInBtn:hover,
#pviewFitW QPushButton#ZoomOutBtn:hover,
#pviewFitW QPushButton#ResetBtn:hover,
#pviewFitW QPushButton#DragBtn:hover,
#pviewFitW QPushButton#MeasureBtn:hover {
    background-color: rgba(0,255,136,0.18);
    border: 2px solid #00ff88;
}

/* 选中态（checked）更明显：明亮背景 + 内外对比边框 + 轻微发光效果 */
#pviewFitW QPushButton#DragBtn:checked,
#pviewFitW QPushButton#MeasureBtn:checked {
    border: 2px solid #00ff88;
    background-color: rgba(16,24,24,0.85);/* 大多数 Qt 版本会忽略 ，但保留为兼容性注释 */
}

QLabel#ZoomLabel  {
    background-color: transparent;
    color: white;
    font-size: 18px;
    font-weight: bold;
}